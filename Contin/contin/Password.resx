<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>120, 17</value>
  </metadata>
</root>